name: CI Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  REGISTRY: swr.cn-north-4.myhuaweicloud.com
  REPO_NAMESPACE: huawei-css
  ARCHITECTURES: |
    X86=amd=amd64
    ARM=arm=arm64
    PPC64LE=ppc64le=ppc64le
  IMAGES: |
    huawei-csi
    storage-backend-controller
    storage-backend-sidecar
    huawei-csi-extender

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup Go Environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - name: Get Version
        id: branch-names
        uses: tj-actions/branch-names@v8
        with:
          strip_tag_prefix: v

      - name: Login to Container Registry
        env:
          REGISTRY_USER: ${{ secrets.SWR_UNAME }}
          REGISTRY_PASSWORD: ${{ secrets.SWR_PASSWORD }}
        run: |
          docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY

      - name: Build
        run: |
          while IFS='=' read -r ARCH_NAME SUFFIX DOCKER_ARCH; do
            echo "===== start to build: $ARCH_NAME ====="
          
            chmod +x ./build.sh
            ./build.sh ${{ steps.version.outputs.VERSION }} $ARCH_NAME
          
            while IFS= read -r IMAGE_NAME; do
              LOCAL_TAG="${IMAGE_NAME}:${{ steps.version.outputs.VERSION }}"
              REMOTE_TAG="${REGISTRY}/${REPO_NAMESPACE}/${IMAGE_NAME}:${{ steps.version.outputs.VERSION }}-${SUFFIX}"
          
              docker tag "$LOCAL_TAG" "$REMOTE_TAG"
              docker push "$REMOTE_TAG"
              echo "pushed: $REMOTE_TAG"
            done <<< "$IMAGES"
          
          done <<< "$ARCHITECTURES"

      - name: Create Manifests
        run: |
          while IFS= read -r IMAGE_NAME; do
            echo "===== start to create ${IMAGE_NAME} manifest ====="
          
            MANIFEST_TAG="${REGISTRY}/${REPO_NAMESPACE}/${IMAGE_NAME}:${{ steps.version.outputs.VERSION }}"

            ARCH_TAGS=()
            while IFS='=' read -r ARCH_NAME SUFFIX DOCKER_ARCH; do
              ARCH_TAGS+=("${REGISTRY}/${REPO_NAMESPACE}/${IMAGE_NAME}:${{ steps.version.outputs.VERSION }}-${SUFFIX}")
            done <<< "$ARCHITECTURES"
          
            docker manifest create --insecure "$MANIFEST_TAG" "${ARCH_TAGS[@]}"
          
            while IFS='=' read -r ARCH_NAME SUFFIX DOCKER_ARCH; do
              ARCH_IMAGE_TAG="${REGISTRY}/${REPO_NAMESPACE}/${IMAGE_NAME}:${{ steps.version.outputs.VERSION }}-${SUFFIX}"
              docker manifest annotate "$MANIFEST_TAG" "$ARCH_IMAGE_TAG" \
                --os linux \
                --arch "$DOCKER_ARCH"
            done <<< "$ARCHITECTURES"
          
            docker manifest push --insecure "$MANIFEST_TAG"
            echo "pushed: $MANIFEST_TAG"
          
          done <<< "$IMAGES"

      - name: Create Release and Upload Release Asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: TODO New Release.
          draft: true
          files: |
            eSDK_Storage_CSI_V${{ steps.branch-names.outputs.tag }}_X86_64.zip
            eSDK_Storage_CSI_V${{ steps.branch-names.outputs.tag }}_ARM_64.zip
            eSDK_Storage_CSI_V${{ steps.branch-names.outputs.tag }}_PPC64LE_64.zip
